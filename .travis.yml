language: java
jdk:
  - openjdk17

# master 브랜치가 푸시될 때 CI 수행
branches:
  only:
    - master

# gradlew 실행 권한 부여
before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# 푸시될 때 수행하는 명령어
script: "./gradlew clean build"

before_deploy:
  - zip -r spring-webservice *
  - mkdir -p deploy
  - mv spring-webservice.zip deploy/spring-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: spring-webservice-deploy # 6-3-3에서 생성한 S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true
    on:
      repo: honginSon/spring-webservice #Github 주소
      branch: master

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: spring-webservice-deploy # S3 버킷
    key: spring-webservice.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      repo: honginSon/spring-webservice
      branch: master

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - sonhi2000@naver.com